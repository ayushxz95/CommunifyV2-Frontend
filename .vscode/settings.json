{
    "editor.formatOnSave": true,
    "editor.tabSize": 2,
    "workbench.editor.showTabs": "multiple",
    // Controls if quick suggestions should show up while typing
    "editor.quickSuggestions": {
      "other": true,
      "comments": true,
      "strings": true
    },
    // Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.
    "editor.acceptSuggestionOnCommitCharacter": true,
    // Controls if suggestions should be accepted on 'Enter' - in addition to 'Tab'. Helps to avoid ambiguity between inserting new lines or accepting suggestions. The value 'smart' means only accept a suggestion with Enter when it makes a textual change
    "editor.acceptSuggestionOnEnter": "on",
    // Controls the delay in ms after which quick suggestions will show up.
    "editor.quickSuggestionsDelay": 10,
    // Controls if suggestions should automatically show up when typing trigger characters
    "editor.suggestOnTriggerCharacters": true,
    // Controls if pressing tab inserts the best suggestion and if tab cycles through other suggestions
    "editor.tabCompletion": "off",
    // Controls whether sorting favours words that appear close to the cursor
    "editor.suggest.localityBonus": true,
    // Controls how suggestions are pre-selected when showing the suggest list
    "editor.suggestSelection": "recentlyUsed",
    // Enable word based suggestions
    "editor.wordBasedSuggestions": "matchingDocuments",
    // Enable parameter hints
    "editor.parameterHints.enabled": true,
    "editor.codeActionsOnSave": {
      "source.organizeImports": "explicit",
      "source.fixAll": "explicit",
      "fixAll.eslint": "explicit",
      "addMissingImports": "explicit"
    },
    "editor.formatOnSaveMode": "file",
    "typescript.format.enable": true,
    "eslint.alwaysShowStatus": true,
    "eslint.enable": true,
    "eslint.lintTask.options": ".",
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "[typescript]": {
      "editor.defaultFormatter": "vscode.typescript-language-features"
    },
    "typescript.autoClosingTags": true,
    "typescript.inlayHints.variableTypes.enabled": false,
    "typescript.referencesCodeLens.enabled": true,
    "typescript.implementationsCodeLens.enabled": true,
    "typescript.updateImportsOnFileMove.enabled": "always",
    "[typescriptreact]": {
      "editor.defaultFormatter": "vscode.typescript-language-features"
    },
    "[css]": {
      "editor.defaultFormatter": "vscode.css-language-features"
    },
    "[javascript]": {
      "editor.defaultFormatter": "vscode.typescript-language-features"
    },
    "editor.guides.highlightActiveBracketPair": true,
    "[html]": {
      "editor.defaultFormatter": "vscode.html-language-features"
    }
  }
  